<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" 
  xmlns:p="http://www.springframework.org/schema/p" 
  xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
  
  <!-- Root Context: defines shared resources visible to all other web components -->
  <context:component-scan base-package="com.isec.sc" />
  
  <context:property-placeholder location="classpath:sc.properties"/>
  
  <bean id="maConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
    p:host-name="${redis.host}" 
    p:port="${redis.port}" 
    p:password="${redis.pass}"
    p:database="${redis.ma.dbindex}"
    p:timeout="${redis.timeout}" 
    p:usePool="${redis.usePool}"
    p:poolConfig-ref="jedisPoolConfig"/>
  

  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"
   p:maxTotal="${redis.pool.maxTotal}"
   p:maxWaitMillis="${redis.pool.maxWait}"
   p:maxIdle="${redis.pool.maxIdle}"
   p:minIdle="${redis.pool.minIdle}"
   p:testOnBorrow="${redis.pool.testOnBorrow}"
  />
  
  <bean id="maStringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" 
    p:connection-factory-ref="maConnectionFactory"
    p:defaultSerializer-ref="stringSerializer"  />
    
  <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
  
  
  <!-- <bean id="objectRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
    p:connection-factory-ref="maConnectionFactory"/> -->
  
  <bean id="sterlingHTTPConnector" class="com.isec.sc.intgr.api.delegate.SterlingHTTPConnector">
    <constructor-arg name="url" value="${sc.api.http.url}" />
    <constructor-arg name="user" value="${sc.api.user}" />
    <constructor-arg name="password" value="${sc.api.password}" />
    <constructor-arg name="param" value="${sc.api.http.param}" /> 
  </bean> 
  
  
  <!--  Message Listener Adapter -->
  <!-- <bean id="delegateMessageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
      <constructor-arg>
      <bean class="com.isec.sc.intgr.redis.listener.MagentoMessageDelegate" />
      </constructor-arg>
    </bean> --><!-- Delegate Type -->
    
    <!-- Magento  Listener -->
    <bean id="maProductMessageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
      <constructor-arg>
        <bean class="com.isec.sc.intgr.redis.listener.ProductMsgListener" />
      </constructor-arg>
    </bean>
    <bean id="maOrderMessageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
      <constructor-arg>
        <bean class="com.isec.sc.intgr.redis.listener.OrderCreateMsgListener" />
      </constructor-arg>
    </bean>
    <bean id="maOrderStsUpdateMessageListener" class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
      <constructor-arg>
        <bean class="com.isec.sc.intgr.redis.listener.OrderUpdateMsgListener" />
      </constructor-arg>
    </bean>
    <!-- Magento  Listener -->
    
    
  
  
  <!-- RedisMessage Listener Setting -->
  <bean id="maRedisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
    <property name="connectionFactory" ref="maConnectionFactory" />
      <property name="messageListeners" >
        <map>
          <!-- <entry key-ref="delegateMessageListener">
            <bean class="org.springframework.data.redis.listener.ChannelTopic">
              <constructor-arg value="chatroom.patrick" />
            </bean>
          </entry> -->
          <!-- Magento Message Listener -->
          <entry key-ref="maProductMessageListener">
            <bean class="org.springframework.data.redis.listener.PatternTopic">
              <constructor-arg value="ch:ma:*:product" />
            </bean>
          </entry>
          <entry key-ref="maOrderMessageListener">
            <bean class="org.springframework.data.redis.listener.PatternTopic">
              <constructor-arg value="ch:ma:*:order" />
            </bean>
          </entry>
          <entry key-ref="maOrderStsUpdateMessageListener">
            <bean class="org.springframework.data.redis.listener.PatternTopic">
              <constructor-arg value="ch:ma:*:order:update" />
            </bean>
          </entry>
          <!-- Magento Message Listener -->
        </map>
     </property>
  </bean>
  
</beans>
